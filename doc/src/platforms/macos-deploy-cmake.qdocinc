/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

//! [building with cmake]
    Go into the directory that contains the application:

    \snippet snippets/code/doc_src_deployment.qdoc 28

    Next, set the \c CMAKE_PREFIX_PATH variable to point to your
    installation prefix. If you have a Cmake build already, delete the
    \c CMakeCache.txt file. Then, rerun CMake:

    \code
        cmake -DCMAKE_PREFIX_PATH=path/to/Qt/6.4.0/your_platform -S <source-dir> -B <build-dir> -G Ninja
    \endcode

    Alternatively, use the convenience script \c qt-cmake, which sets the
    \c CMAKE_PREFIX_PATH variable for you.

    \code
        path/to/Qt/6.4.0/your_platform/bin/qt-cmake -S <source-dir> -B <build-dir> -G Ninja
    \endcode

    Finally, go into your build directory and run your preferred build system.
    In this example, we're using \c Ninja.

    \code
        cd path/to/build/dir
        ninja
    \endcode

    Now, provided that everything compiled and linked without any errors, you
    should have a \c plugandpaint.app bundle ready for deployment. Try
    installing the bundle on a machine running \macos that does not have Qt or
    any Qt applications installed.
//! [building with cmake]
