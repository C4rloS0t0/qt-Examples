/****************************************************************************
**
** Copyright (C) 2021 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qt-intro.html
    \title Introduction to Qt
    \brief Qt 6 features and its benefits.

    Qt 6 lets you develop applications with intuitive user interfaces for
    multiple devices and platforms, faster than ever before.

    \note Qt 6 is highly compatible with \l{Qt 5.15}{Qt 5}. Developers of Qt 5
    applications can move seamlessly to Qt 6 while retaining the applications'
    functionality.

    \section1 Designing User Interfaces

    Qt offers two \{Solutions for UI Design}{solutions for UI design}:
    \l{Qt Widgets} and \l{Qt Quick}.
    \b{Qt Widgets} tightly integrates with desktop
    look-and-feel. \b{Qt Quick} UIs are dynamic with fluid animations and are
    optimal for touch interfaces. The
    \l{User Interfaces} page compares both Qt Quick and Qt Widgets
    technologies.

    \section1 Cross-Platform

    Qt is cross-platform. Qt modules are available on various
    \l{Supported Platforms} {devices and platforms}.
    Developer tools like \l{Qt Creator Manual}{Qt Creator} and
    \l{Qt Design Studio Manual}{Qt Design Studio} are available for Windows,
    macOS, and Linux.
    Build tools like \l{qmake} and \l{Build with CMake}{CMake} seamlessly
    handle the platform-specific differences in the build process.

    \section1 Features and APIs

    Qt features a large set of \l{All Modules}{modules} in the area of UIs,
    networking, web technologies, communication protocols, file formats, and
    much more.

    \l{Qt Essentials}{Essentials} define the foundation of Qt on all platforms.
    They are available on all the supported development platforms and tested
    target platforms.

    \l{Qt Add-Ons}{Add-ons} bring additional value for specific purposes.

    \section1 Tools

    \l{Qt Creator Manual}{Qt Creator} is a complete IDE for developing Qt
    applications. You can set up projects, code, debug, package, and
    deploy from within Qt Creator.

    \l{Qt Design Studio Manual}{Qt Design Studio} supports designing
    Qt Quick UIs. It enables you to define the look-and-feel of the UI from
    wireframe to final implementation, using preset UI components.

    Many more \l{Qt Tool Manuals}{tools} are available.

    \section1 Programming Languages

    Qt applications are usually written in C++. \l{Qt for Python} allows
    you to use write applications in Python.

    Qt Quick UIs are written in \l{The QML Reference}{QML}.

    \section1 Where To Go From Here

    \list
        \li \l{Getting Started with Qt}{Getting Started}
        \li \l{Qt Examples And Tutorials}{Examples and Tutorials}
        \li \l{Supported Platforms}
        \li \l{Qt Licensing}
    \endlist
*/
